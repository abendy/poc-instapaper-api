{"version":3,"sources":["material.js","app.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","registeredComponents_","createdComponents_","componentConfigProperty_","findRegisteredClass_","name","optReplace","i","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","upgradedList","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","j","m","callbacks","widget","upgradedEv","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","classAsString","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","regClass","newConfig","constructor","item","hasOwnProperty","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","this","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","MaterialTab","tab","ctx","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","charAt","href","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayout","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","tabBar_","TAB_MANUAL_SWITCH","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","offset","webkitTransform","msTransform","transform"],"mappings":"CAAA,WACA,aA8BA,IAAAA,EAAA,CAUAC,WAAA,SAAAC,EAAAC,KAQAC,eAAA,SAAAC,EAAAH,KAOAI,gBAAA,SAAAC,KAKAC,qBAAA,aAWAC,yBAAA,SAAAC,EAAAC,KAMAC,SAAA,SAAAC,KAMAC,kBAAA,SAAAC,OAGAf,EAAA,WAIA,IAAAgB,EAAA,GAGAC,EAAA,GAEAC,EAAA,8BAWA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAN,EAAAO,OAAAD,IACA,GAAAN,EAAAM,GAAAE,YAAAJ,EAIA,YAHA,IAAAC,IACAL,EAAAM,GAAAD,GAEAL,EAAAM,GAGA,OAAA,EAUA,SAAAG,EAAApB,GACA,IAAAqB,EAAArB,EAAAsB,aAAA,iBAEA,OAAA,OAAAD,EAAA,CAAA,IAAAA,EAAAE,MAAA,KAYA,SAAAC,EAAAxB,EAAAK,GAEA,OAAA,IADAe,EAAApB,GACAyB,QAAApB,GAWA,SAAAqB,EAAAC,EAAAC,EAAAC,GACA,GAAA,gBAAAC,QAAA,mBAAAA,OAAAC,YACA,OAAA,IAAAA,YAAAJ,EAAA,CACAC,QAAAA,EACAC,WAAAA,IAGA,IAAAG,EAAAC,SAAAC,YAAA,UAEA,OADAF,EAAAG,UAAAR,EAAAC,EAAAC,GACAG,EAaA,SAAAI,EAAAvC,EAAAC,GACA,QAAA,IAAAD,QACA,IAAAC,EACA,IAAA,IAAAmB,EAAA,EAAAA,EAAAN,EAAAO,OAAAD,IACAmB,EAAAzB,EAAAM,GAAAE,UACAR,EAAAM,GAAAoB,cAEA,CACA,IAAAhC,EAAA,EACA,QAAA,IAAAP,EAAA,CACA,IAAAwC,EAAAxB,EAAAT,GACAiC,IACAxC,EAAAwC,EAAAD,UAKA,IADA,IAAAnC,EAAA+B,SAAAM,iBAAA,IAAAzC,GACA0C,EAAA,EAAAA,EAAAtC,EAAAgB,OAAAsB,IACAC,EAAAvC,EAAAsC,GAAAnC,IAYA,SAAAoC,EAAAzC,EAAAH,GAEA,KAAA,iBAAAG,GAAAA,aAAA0C,SACA,MAAA,IAAAC,MAAA,qDAGA,IAAAC,EAAAlB,EAAA,0BAAA,GAAA,GAEA,GADA1B,EAAA6C,cAAAD,IACAA,EAAAE,iBAAA,CAIA,IAAAC,EAAA3B,EAAApB,GACAgD,EAAA,GAGA,GAAAnD,EAUA2B,EAAAxB,EAAAH,IACAmD,EAAAC,KAAAnC,EAAAjB,QAXA,CACA,IAAAqD,EAAAlD,EAAAkD,UACAvC,EAAAwC,QAAA,SAAAC,GAEAF,EAAAG,SAAAD,EAAAf,YACA,IAAAW,EAAAvB,QAAA2B,KACA5B,EAAAxB,EAAAoD,EAAAjC,YACA6B,EAAAC,KAAAG,KAQA,IAAA,IAAAd,EAAArB,EAAA,EAAAuB,EAAAQ,EAAA9B,OAAAD,EAAAuB,EAAAvB,IAAA,CAEA,KADAqB,EAAAU,EAAA/B,IAkBA,MAAA,IAAA0B,MACA,8DAhBAI,EAAAE,KAAAX,EAAAnB,WACAnB,EAAAsD,aAAA,gBAAAP,EAAAQ,KAAA,MACA,IAAAC,EAAA,IAAAlB,EAAAmB,iBAAAzD,GACAwD,EAAA3C,GAAAyB,EACA1B,EAAAqC,KAAAO,GAEA,IAAA,IAAAE,EAAA,EAAAC,EAAArB,EAAAsB,UAAA1C,OAAAwC,EAAAC,EAAAD,IACApB,EAAAsB,UAAAF,GAAA1D,GAGAsC,EAAAuB,SAEA7D,EAAAsC,EAAAnB,WAAAqC,GAOA,IAAAM,EAAApC,EAAA,yBAAA,GAAA,GACA1B,EAAA6C,cAAAiB,KAgHA,SAAAC,EAAAX,GACA,GAAAA,EAAA,CACA,IAAAY,EAAApD,EAAAa,QAAA2B,GACAxC,EAAAqD,OAAAD,EAAA,GAEA,IAAAE,EAAAd,EAAAe,SAAA7C,aAAA,iBAAAC,MAAA,KACA6C,EAAAF,EAAAzC,QAAA2B,EAAAvC,GAAAwD,eACAH,EAAAD,OAAAG,EAAA,GACAhB,EAAAe,SAAAb,aAAA,gBAAAY,EAAAX,KAAA,MAEA,IAAAvB,EAAAN,EAAA,2BAAA,GAAA,GACA0B,EAAAe,SAAAtB,cAAAb,IAgCA,MAAA,CACApC,WAAAwC,EACArC,eAAA0C,EACAxC,gBApJA,SAAAqE,EAAApE,GACAqE,MAAAC,QAAAtE,KAEAA,EADAA,aAAAwC,QACA,CAAAxC,GAEAqE,MAAAE,UAAAC,MAAAC,KAAAzE,IAGA,IAAA,IAAAF,EAAAiB,EAAA,EAAAuB,EAAAtC,EAAAgB,OAAAD,EAAAuB,EAAAvB,KACAjB,EAAAE,EAAAe,cACA2D,cACAnC,EAAAzC,GACA,EAAAA,EAAA6E,SAAA3D,QACAoD,EAAAtE,EAAA6E,YAwIA1E,qBA5DA,WACA,IAAA,IAAAqC,EAAA,EAAAA,EAAA7B,EAAAO,OAAAsB,IACAJ,EAAAzB,EAAA6B,GAAArB,YA2DAf,yBAxEA,SAAAC,EAAAC,GACA,IAAAwE,EAAAhE,EAAAT,GACAyE,GACAA,EAAAlB,UAAAX,KAAA3C,IAsEAC,SA/HA,SAAAC,GAKA,IAEAqD,GAAA,OAFA,IAAArD,EAAAqD,aACA,IAAArD,EAAA,SAIAqD,EAAArD,EAAAqD,QAAArD,EAAA,QAGA,IAAAuE,EAAA,CACAtB,iBAAAjD,EAAAwE,aAAAxE,EAAA,YACAW,UAAAX,EAAA6D,eAAA7D,EAAA,cACA6B,SAAA7B,EAAA6B,UAAA7B,EAAA,SACAqD,OAAAA,EACAD,UAAA,IAYA,GATAjD,EAAAwC,QAAA,SAAA8B,GACA,GAAAA,EAAA5C,WAAA0C,EAAA1C,SACA,MAAA,IAAAM,MAAA,sDAAAsC,EAAA5C,UAEA,GAAA4C,EAAA9D,YAAA4D,EAAA5D,UACA,MAAA,IAAAwB,MAAA,wDAIAnC,EAAAwE,YAAAP,UACAS,eAAArE,GACA,MAAA,IAAA8B,MACA,uCAAA9B,EACA,2BAGAC,EAAAN,EAAA6D,cAAAU,IAGApE,EAAAsC,KAAA8B,IAwFAtE,kBA9BA,SAAAC,GAKA,IAAAyE,EAAA,SAAAC,GACAxE,EAAAyE,OAAA,SAAAJ,GACA,OAAAA,EAAAd,WAAAiB,IACAjC,QAAAY,IAEA,GAAArD,aAAA6D,OAAA7D,aAAA4E,SACA,IAAA,IAAA9C,EAAA,EAAAA,EAAA9B,EAAAQ,OAAAsB,IACA2C,EAAAzE,EAAA8B,QAEA,CAAA,KAAA9B,aAAA6E,MAGA,MAAA,IAAA5C,MAAA,qDAFAwC,EAAAzE,MAjUA,IA+VA8E,sBAcA7F,EAAA8F,gBAcA9F,EAAA+F,UAIA/F,EAAA,WAAAA,EAAAC,WACAD,EAAA,eAAAA,EAAAI,eACAJ,EAAA,gBAAAA,EAAAM,gBACAN,EAAA,qBACAA,EAAAQ,qBACAR,EAAA,yBACAA,EAAAS,yBACAT,EAAA,SAAAA,EAAAY,SACAZ,EAAA,kBAAAA,EAAAc,kBACAqB,OAAAnC,iBAAAA,EACAmC,OAAA,iBAAAnC,EAEAmC,OAAA6D,iBAAA,OAAA,WAQA,cAAA1D,SAAA2D,cAAA,QACA,kBAAA3D,UACA,qBAAAH,QAAAyC,MAAAE,UAAAtB,SACAlB,SAAA4D,gBAAA3C,UAAA4C,IAAA,UACAnG,EAAAQ,yBAKAR,EAAAI,eAAA,aAIAJ,EAAAY,SAAA,gBAWAwF,KAAAC,MAKAD,KAAAC,IAAA,WACA,OAAA,IAAAD,MAAAE,WAEAF,KAAA,IAAAA,KAAAC,KAMA,IAJA,IAAAE,EAAA,CACA,SACA,OAEAjF,EAAA,EAAAA,EAAAiF,EAAAhF,SAAAY,OAAAqE,wBAAAlF,EAAA,CACA,IAAAmF,EAAAF,EAAAjF,GACAa,OAAAqE,sBAAArE,OAAAsE,EAAA,yBACAtE,OAAAuE,qBAAAvE,OAAAsE,EAAA,yBAAAtE,OAAAsE,EAAA,+BACAtE,OAAA,sBAAAA,OAAAqE,sBACArE,OAAA,qBAAAA,OAAAuE,qBAEA,GAAA,uBAAAC,KAAAxE,OAAAyE,UAAAC,aAAA1E,OAAAqE,wBAAArE,OAAAuE,qBAAA,CACA,IAAAI,EAAA,EAKA3E,OAAAqE,sBAAA,SAAA7F,GACA,IAAA0F,EAAAD,KAAAC,MACAU,EAAAC,KAAAC,IAAAH,EAAA,GAAAT,GACA,OAAAa,WAAA,WACAvG,EAAAmG,EAAAC,IACAA,EAAAV,IAEAlE,OAAAuE,qBAAAS,aACAhF,OAAA,sBAAAA,OAAAqE,sBACArE,OAAA,qBAAAA,OAAAuE,qBAyBA,IAAAU,EAAA,SAAA/G,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,eAAAiF,GAOAtC,UAAAyC,UAAA,GASAH,EAAAtC,UAAA0C,YAAA,CACAC,cAAA,uBACAC,iBAAA,+BACAC,OAAA,cAQAP,EAAAtC,UAAA8C,aAAA,SAAAC,GACAA,GACAR,KAAA7C,SAAAsD,QAYAV,EAAAtC,UAAA,QAHAsC,EAAAtC,UAAAiD,QAAA,WACAV,KAAA7C,SAAAwD,UAAA,GAWAZ,EAAAtC,UAAA,OAHAsC,EAAAtC,UAAAmD,OAAA,WACAZ,KAAA7C,SAAAwD,UAAA,GAMAZ,EAAAtC,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,GAAA6C,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAC,eAAA,CACA,IAAAS,EAAA5F,SAAA2D,cAAA,QACAiC,EAAA3E,UAAA4C,IAAAkB,KAAAG,YAAAE,kBACAL,KAAAc,eAAA7F,SAAA2D,cAAA,QACAoB,KAAAc,eAAA5E,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAO,EAAAE,YAAAf,KAAAc,gBACAd,KAAAgB,uBAAAhB,KAAAO,aAAAU,KAAAjB,MACAA,KAAAc,eAAAnC,iBAAA,UAAAqB,KAAAgB,wBACAhB,KAAA7C,SAAA4D,YAAAF,GAEAb,KAAAkB,uBAAAlB,KAAAO,aAAAU,KAAAjB,MACAA,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAAkB,wBACAlB,KAAA7C,SAAAwB,iBAAA,aAAAqB,KAAAkB,0BAKAvI,EAAAY,SAAA,CACAyE,YAAA+B,EACA1C,cAAA,iBACAhC,SAAA,gBACAwB,QAAA,IA0BA,IAAAsE,EAAA,SAAAnI,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,iBAAAqG,GAOA1D,UAAAyC,UAAA,CAAAkB,aAAA,MASAD,EAAA1D,UAAA0C,YAAA,CACAkB,MAAA,sBACAC,YAAA,4BACAC,aAAA,6BACAC,aAAA,6BACApB,cAAA,uBACAqB,qBAAA,sCACApB,iBAAA,iCACAqB,cAAA,qBACApB,OAAA,aACAqB,WAAA,aACAC,YAAA,cACAC,WAAA,aACAC,YAAA,eAQAX,EAAA1D,UAAAsE,UAAA,SAAAvB,GACAR,KAAAgC,kBAQAb,EAAA1D,UAAAwE,SAAA,SAAAzB,GACAR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,aAQAR,EAAA1D,UAAAyE,QAAA,SAAA1B,GACAR,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAQAR,EAAA1D,UAAA2E,WAAA,SAAA5B,GACAR,KAAAqC,SAOAlB,EAAA1D,UAAAuE,eAAA,WACAhC,KAAAsC,gBACAtC,KAAAuC,oBAOApB,EAAA1D,UAAA4E,MAAA,WAGAvH,OAAA+E,WAAA,WACAG,KAAAwC,cAAA/B,QACAQ,KAAAjB,MAAAA,KAAAE,UAAAkB,eAeAD,EAAA1D,UAAA,iBAPA0D,EAAA1D,UAAA8E,iBAAA,WACAvC,KAAAwC,cAAAC,QACAzC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA0B,YAEA7B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA0B,aAgBAV,EAAA1D,UAAA,cAPA0D,EAAA1D,UAAA6E,cAAA,WACAtC,KAAAwC,cAAA7B,SACAX,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAyB,aAEA5B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAyB,cAaAT,EAAA1D,UAAA,QAJA0D,EAAA1D,UAAAiD,QAAA,WACAV,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYAb,EAAA1D,UAAA,OAJA0D,EAAA1D,UAAAmD,OAAA,WACAZ,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYAb,EAAA1D,UAAA,MAJA0D,EAAA1D,UAAAiF,MAAA,WACA1C,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAYAb,EAAA1D,UAAA,QAJA0D,EAAA1D,UAAAkF,QAAA,WACA3C,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAMAb,EAAA1D,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA6C,KAAAwC,cAAAxC,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAkB,OACA,IAAAwB,EAAA5H,SAAA2D,cAAA,QACAiE,EAAA3G,UAAA4C,IAAAkB,KAAAG,YAAAmB,aACA,IAAAwB,EAAA7H,SAAA2D,cAAA,QACAkE,EAAA5G,UAAA4C,IAAAkB,KAAAG,YAAAoB,cACA,IAAAwB,EAAA9H,SAAA2D,cAAA,QAKA,GAJAmE,EAAA7G,UAAA4C,IAAAkB,KAAAG,YAAAqB,cACAqB,EAAA9B,YAAAgC,GACA/C,KAAA7C,SAAA4D,YAAA+B,GACA9C,KAAA7C,SAAA4D,YAAA8B,GACA7C,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAC,eAAA,CACAJ,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsB,sBACAzB,KAAAgD,wBAAA/H,SAAA2D,cAAA,QACAoB,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAE,kBACAL,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAC,eACAJ,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAuB,eACA1B,KAAAiD,mBAAAjD,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAAgD,wBAAArE,iBAAA,UAAAqB,KAAAiD,oBACA,IAAAC,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAN,KAAAgD,wBAAAjC,YAAAmC,GACAlD,KAAA7C,SAAA4D,YAAAf,KAAAgD,yBAEAhD,KAAAmD,mBAAAnD,KAAA+B,UAAAd,KAAAjB,MACAA,KAAAoD,kBAAApD,KAAAiC,SAAAhB,KAAAjB,MACAA,KAAAqD,iBAAArD,KAAAkC,QAAAjB,KAAAjB,MACAA,KAAAsD,oBAAAtD,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAAwC,cAAA7D,iBAAA,SAAAqB,KAAAmD,oBACAnD,KAAAwC,cAAA7D,iBAAA,QAAAqB,KAAAoD,mBACApD,KAAAwC,cAAA7D,iBAAA,OAAAqB,KAAAqD,kBACArD,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAAsD,qBACAtD,KAAAgC,iBACAhC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,eAKAnJ,EAAAY,SAAA,CACAyE,YAAAmD,EACA9D,cAAA,mBACAhC,SAAA,kBACAwB,QAAA,IA0BA,IAAA0G,EAAA,SAAAvK,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,mBAAAyI,GAOA9F,UAAAyC,UAAA,CAAAkB,aAAA,MASAmC,EAAA9F,UAAA0C,YAAA,CACAkB,MAAA,yBACAmC,iBAAA,uBACA/B,qBAAA,sCACApB,iBAAA,oCACAqB,cAAA,qBACApB,OAAA,aACAqB,WAAA,aACAC,YAAA,cACAC,WAAA,cAQA0B,EAAA9F,UAAAsE,UAAA,SAAAvB,GACAR,KAAAgC,kBAQAuB,EAAA9F,UAAAwE,SAAA,SAAAzB,GACAR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,aAQA4B,EAAA9F,UAAAyE,QAAA,SAAA1B,GACAR,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAQA4B,EAAA9F,UAAA2E,WAAA,SAAA5B,GACAR,KAAAqC,SAOAkB,EAAA9F,UAAAuE,eAAA,WACAhC,KAAAsC,gBACAtC,KAAAuC,oBAOAgB,EAAA9F,UAAA4E,MAAA,WAGAvH,OAAA+E,WAAA,WACAG,KAAAwC,cAAA/B,QACAQ,KAAAjB,MAAAA,KAAAE,UAAAkB,eAeAmC,EAAA9F,UAAA,iBAPA8F,EAAA9F,UAAA8E,iBAAA,WACAvC,KAAAwC,cAAAC,QACAzC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA0B,YAEA7B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA0B,aAgBA0B,EAAA9F,UAAA,cAPA8F,EAAA9F,UAAA6E,cAAA,WACAtC,KAAAwC,cAAA7B,SACAX,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAyB,aAEA5B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAyB,cAaA2B,EAAA9F,UAAA,QAJA8F,EAAA9F,UAAAiD,QAAA,WACAV,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYAuB,EAAA9F,UAAA,OAJA8F,EAAA9F,UAAAmD,OAAA,WACAZ,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYAuB,EAAA9F,UAAA,MAJA8F,EAAA9F,UAAAiF,MAAA,WACA1C,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAYAuB,EAAA9F,UAAA,QAJA8F,EAAA9F,UAAAkF,QAAA,WACA3C,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAMAuB,EAAA9F,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CAEA,GADA6C,KAAAwC,cAAAxC,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAkB,OACArB,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAqD,kBAAA,CACAxD,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsB,sBACAzB,KAAAgD,wBAAA/H,SAAA2D,cAAA,QACAoB,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAE,kBACAL,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAqD,kBACAxD,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAuB,eACA1B,KAAAiD,mBAAAjD,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAAgD,wBAAArE,iBAAA,UAAAqB,KAAAiD,oBACA,IAAAC,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAN,KAAAgD,wBAAAjC,YAAAmC,GACAlD,KAAA7C,SAAA4D,YAAAf,KAAAgD,yBAEAhD,KAAAmD,mBAAAnD,KAAA+B,UAAAd,KAAAjB,MACAA,KAAAoD,kBAAApD,KAAAiC,SAAAhB,KAAAjB,MACAA,KAAAqD,iBAAArD,KAAAkC,QAAAjB,KAAAjB,MACAA,KAAAyD,sBAAAzD,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAAwC,cAAA7D,iBAAA,SAAAqB,KAAAmD,oBACAnD,KAAAwC,cAAA7D,iBAAA,QAAAqB,KAAAoD,mBACApD,KAAAwC,cAAA7D,iBAAA,OAAAqB,KAAAqD,kBACArD,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAAyD,uBACAzD,KAAAgC,iBACAhC,KAAA7C,SAAAjB,UAAA4C,IAAA,iBAKAnG,EAAAY,SAAA,CACAyE,YAAAuF,EACAlG,cAAA,qBACAhC,SAAA,qBACAwB,QAAA,IA0BA,IAAA6G,EAAA,SAAA1K,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,aAAA4I,GAOAjG,UAAAyC,UAAA,CAEAyD,4BAAA,GAEAC,6BAAA,GAGAC,cAAA,KAQAH,EAAAjG,UAAAqG,UAAA,CACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,SAAA,GACAC,WAAA,IAUAT,EAAAjG,UAAA0C,YAAA,CACAiE,UAAA,sBACAC,QAAA,oBACAC,KAAA,iBACAC,sBAAA,kCACAnE,cAAA,uBACAqB,qBAAA,sCACAnB,OAAA,aAEAwB,YAAA,cACA0C,WAAA,aACAC,aAAA,eAEAC,YAAA,wBAEAC,aAAA,yBACAC,SAAA,qBACAC,UAAA,sBACAC,UAAA,uBAKApB,EAAAjG,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CAEA,IAAA4H,EAAA9J,SAAA2D,cAAA,OACAmG,EAAA7I,UAAA4C,IAAAkB,KAAAG,YAAAiE,WACApE,KAAA7C,SAAA6H,cAAAC,aAAAF,EAAA/E,KAAA7C,UACA6C,KAAA7C,SAAA6H,cAAAE,YAAAlF,KAAA7C,UACA4H,EAAAhE,YAAAf,KAAA7C,UACA6C,KAAAmF,WAAAJ,EAEA,IAAAK,EAAAnK,SAAA2D,cAAA,OACAwG,EAAAlJ,UAAA4C,IAAAkB,KAAAG,YAAAkE,SACArE,KAAAqF,SAAAD,EACAL,EAAAE,aAAAG,EAAApF,KAAA7C,UAEA,IAAAmI,EAAAtF,KAAA7C,SAAA7C,aAAA,QAAA0F,KAAA7C,SAAA7C,aAAA,gBACAiL,EAAA,KACAD,IACAC,EAAAtK,SAAAuK,eAAAF,OAEAtF,KAAAyF,YAAAF,GACA5G,iBAAA,QAAAqB,KAAA0F,gBAAAzE,KAAAjB,OACAuF,EAAA5G,iBAAA,UAAAqB,KAAA2F,wBAAA1E,KAAAjB,QAGA,IAAA4F,EAAA5F,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAmE,MACAtE,KAAA6F,kBAAA7F,KAAA8F,yBAAA7E,KAAAjB,MACAA,KAAA+F,gBAAA/F,KAAAgG,iBAAA/E,KAAAjB,MACA,IAAA,IAAA/F,EAAA,EAAAA,EAAA2L,EAAA1L,OAAAD,IAEA2L,EAAA3L,GAAA0E,iBAAA,QAAAqB,KAAA+F,iBAEAH,EAAA3L,GAAAgM,SAAA,KAEAL,EAAA3L,GAAA0E,iBAAA,UAAAqB,KAAA6F,mBAGA,GAAA7F,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAC,eAEA,IADAJ,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsB,sBACAxH,EAAA,EAAAA,EAAA2L,EAAA1L,OAAAD,IAAA,CACA,IAAAgE,EAAA2H,EAAA3L,GACA4G,EAAA5F,SAAA2D,cAAA,QACAiC,EAAA3E,UAAA4C,IAAAkB,KAAAG,YAAAoE,uBACA,IAAArB,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAO,EAAAE,YAAAmC,GACAjF,EAAA8C,YAAAF,GACA5C,EAAA/B,UAAA4C,IAAAkB,KAAAG,YAAAC,eAIAJ,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAuE,cACA1E,KAAAqF,SAAAnJ,UAAA4C,IAAAkB,KAAAG,YAAAuE,aAEA1E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAwE,eACA3E,KAAAqF,SAAAnJ,UAAA4C,IAAAkB,KAAAG,YAAAwE,cAEA3E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyE,WACA5E,KAAAqF,SAAAnJ,UAAA4C,IAAAkB,KAAAG,YAAAyE,UAEA5E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA0E,YACA7E,KAAAqF,SAAAnJ,UAAA4C,IAAAkB,KAAAG,YAAA0E,WAEA7E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA2E,YACA9E,KAAAqF,SAAAnJ,UAAA4C,IAAAkB,KAAAG,YAAA2E,WAEAC,EAAA7I,UAAA4C,IAAAkB,KAAAG,YAAA2B,eAUA4B,EAAAjG,UAAAiI,gBAAA,SAAAQ,GACA,GAAAlG,KAAA7C,UAAA6C,KAAAyF,YAAA,CACA,IAAAU,EAAAnG,KAAAyF,YAAAW,wBACAC,EAAArG,KAAAyF,YAAAT,cAAAoB,wBACApG,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA2E,aACA9E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAwE,eAEA3E,KAAAmF,WAAAmB,MAAAC,MAAAF,EAAAE,MAAAJ,EAAAI,MAAA,KACAvG,KAAAmF,WAAAmB,MAAAE,IAAAxG,KAAAyF,YAAAgB,UAAAzG,KAAAyF,YAAAiB,aAAA,MACA1G,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyE,WAEA5E,KAAAmF,WAAAmB,MAAAK,KAAA3G,KAAAyF,YAAAmB,WAAA,KACA5G,KAAAmF,WAAAmB,MAAAO,OAAAR,EAAAQ,OAAAV,EAAAK,IAAA,MACAxG,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA0E,YAEA7E,KAAAmF,WAAAmB,MAAAC,MAAAF,EAAAE,MAAAJ,EAAAI,MAAA,KACAvG,KAAAmF,WAAAmB,MAAAO,OAAAR,EAAAQ,OAAAV,EAAAK,IAAA,OAGAxG,KAAAmF,WAAAmB,MAAAK,KAAA3G,KAAAyF,YAAAmB,WAAA,KACA5G,KAAAmF,WAAAmB,MAAAE,IAAAxG,KAAAyF,YAAAgB,UAAAzG,KAAAyF,YAAAiB,aAAA,OAGA1G,KAAA8G,OAAAZ,IAQAxC,EAAAjG,UAAAkI,wBAAA,SAAAO,GACA,GAAAlG,KAAA7C,UAAA6C,KAAAmF,YAAAnF,KAAAyF,YAAA,CACA,IAAAG,EAAA5F,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAmE,KAAA,oBACAsB,GAAA,EAAAA,EAAA1L,QAAA8F,KAAAmF,WAAAjJ,UAAAG,SAAA2D,KAAAG,YAAAqE,cACA0B,EAAAa,UAAA/G,KAAA8D,UAAAI,UACAgC,EAAAc,iBACApB,EAAAA,EAAA1L,OAAA,GAAA+M,SACAf,EAAAa,UAAA/G,KAAA8D,UAAAK,aACA+B,EAAAc,iBACApB,EAAA,GAAAqB,YAWAvD,EAAAjG,UAAAqI,yBAAA,SAAAI,GACA,GAAAlG,KAAA7C,UAAA6C,KAAAmF,WAAA,CACA,IAAAS,EAAA5F,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAmE,KAAA,oBACA,GAAAsB,GAAA,EAAAA,EAAA1L,QAAA8F,KAAAmF,WAAAjJ,UAAAG,SAAA2D,KAAAG,YAAAqE,YAAA,CACA,IAAA0C,EAAA3J,MAAAE,UAAAC,MAAAC,KAAAiI,GAAAnL,QAAAyL,EAAAiB,QACA,GAAAjB,EAAAa,UAAA/G,KAAA8D,UAAAI,SACAgC,EAAAc,iBACA,EAAAE,EACAtB,EAAAsB,EAAA,GAAAD,QAEArB,EAAAA,EAAA1L,OAAA,GAAA+M,aAEA,GAAAf,EAAAa,UAAA/G,KAAA8D,UAAAK,WACA+B,EAAAc,iBACApB,EAAA1L,OAAAgN,EAAA,EACAtB,EAAAsB,EAAA,GAAAD,QAEArB,EAAA,GAAAqB,aAEA,GAAAf,EAAAa,UAAA/G,KAAA8D,UAAAG,OAAAiC,EAAAa,UAAA/G,KAAA8D,UAAAC,MAAA,CACAmC,EAAAc,iBAEA,IAAAI,EAAA,IAAAC,WAAA,aACAnB,EAAAiB,OAAAtL,cAAAuL,GACAA,EAAA,IAAAC,WAAA,WACAnB,EAAAiB,OAAAtL,cAAAuL,GAEAlB,EAAAiB,OAAAG,aACApB,EAAAa,UAAA/G,KAAA8D,UAAAE,SACAkC,EAAAc,iBACAhH,KAAAuH,WAWA7D,EAAAjG,UAAAuI,iBAAA,SAAAE,GACAA,EAAAiB,OAAAK,aAAA,YACAtB,EAAAuB,mBAGAzH,KAAA0H,UAAA,EACA5M,OAAA+E,WAAA,SAAAqG,GACAlG,KAAAuH,OACAvH,KAAA0H,UAAA,GACAzG,KAAAjB,MAAAA,KAAAE,UAAA2D,iBAYAH,EAAAjG,UAAAkK,WAAA,SAAAC,EAAAC,GACA7H,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA2E,WAEA9E,KAAA7C,SAAAmJ,MAAAwB,KAAA,GACA9H,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAwE,cAEA3E,KAAA7C,SAAAmJ,MAAAwB,KAAA,UAAAD,EAAA,QAAAA,EAAA,MACA7H,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyE,UAEA5E,KAAA7C,SAAAmJ,MAAAwB,KAAA,QAAAF,EAAA,QAAAA,EAAA,QACA5H,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA0E,WAEA7E,KAAA7C,SAAAmJ,MAAAwB,KAAA,QAAAF,EAAA,MAAAC,EAAA,MAAAD,EAAA,MAAAC,EAAA,MAGA7H,KAAA7C,SAAAmJ,MAAAwB,KAAA,IASApE,EAAAjG,UAAAsK,4BAAA,SAAA7B,GACAA,EAAAiB,OAAAjL,UAAAiG,OAAAuB,EAAAjG,UAAA0C,YAAAsE,eAOAf,EAAAjG,UAAAuK,yBAAA,WACAhI,KAAA7C,SAAAwB,iBAAA,gBAAAqB,KAAA+H,6BACA/H,KAAA7C,SAAAwB,iBAAA,sBAAAqB,KAAA+H,8BAyDArE,EAAAjG,UAAA,KAlDAiG,EAAAjG,UAAAwK,KAAA,SAAA/B,GACA,GAAAlG,KAAA7C,UAAA6C,KAAAmF,YAAAnF,KAAAqF,SAAA,CAEA,IAAAuC,EAAA5H,KAAA7C,SAAAiJ,wBAAAwB,OACAC,EAAA7H,KAAA7C,SAAAiJ,wBAAAyB,MAEA7H,KAAAmF,WAAAmB,MAAAuB,MAAAA,EAAA,KACA7H,KAAAmF,WAAAmB,MAAAsB,OAAAA,EAAA,KACA5H,KAAAqF,SAAAiB,MAAAuB,MAAAA,EAAA,KACA7H,KAAAqF,SAAAiB,MAAAsB,OAAAA,EAAA,KAKA,IAJA,IAAAM,EAAAlI,KAAAE,UAAAyD,4BAAA3D,KAAAE,UAAA0D,6BAGAgC,EAAA5F,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAmE,MACArK,EAAA,EAAAA,EAAA2L,EAAA1L,OAAAD,IAAA,CACA,IAAAkO,EAAA,KAEAA,EADAnI,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyE,WAAA5E,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA0E,YACA+C,EAAAhC,EAAA3L,GAAAwM,UAAAb,EAAA3L,GAAAyM,cAAAkB,EAAAM,EAAA,IAEAtC,EAAA3L,GAAAwM,UAAAmB,EAAAM,EAAA,IAEAtC,EAAA3L,GAAAqM,MAAA8B,gBAAAD,EAGAnI,KAAA2H,WAAAC,EAAAC,GAGA/M,OAAAqE,sBAAA,WACAa,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsE,cACAzE,KAAA7C,SAAAmJ,MAAAwB,KAAA,UAAAD,EAAA,MAAAD,EAAA,QACA5H,KAAAmF,WAAAjJ,UAAA4C,IAAAkB,KAAAG,YAAAqE,aACAvD,KAAAjB,OAEAA,KAAAgI,2BAEA,IAAA1O,EAAA,SAAA8N,GAOAA,IAAAlB,GAAAlG,KAAA0H,UAAAN,EAAAD,OAAAkB,aAAArI,KAAA7C,WACAlC,SAAAqN,oBAAA,QAAAhP,GACA0G,KAAAuH,SAEAtG,KAAAjB,MACA/E,SAAA0D,iBAAA,QAAArF,KA6BAoK,EAAAjG,UAAA,KApBAiG,EAAAjG,UAAA8J,KAAA,WACA,GAAAvH,KAAA7C,UAAA6C,KAAAmF,YAAAnF,KAAAqF,SAAA,CAGA,IAFA,IAAAO,EAAA5F,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAmE,MAEArK,EAAA,EAAAA,EAAA2L,EAAA1L,OAAAD,IACA2L,EAAA3L,GAAAqM,MAAAiC,eAAA,oBAGA,IAAApC,EAAAnG,KAAA7C,SAAAiJ,wBACAwB,EAAAzB,EAAAyB,OACAC,EAAA1B,EAAA0B,MAGA7H,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsE,cACAzE,KAAA2H,WAAAC,EAAAC,GACA7H,KAAAmF,WAAAjJ,UAAAiG,OAAAnC,KAAAG,YAAAqE,YAEAxE,KAAAgI,6BAgBAtE,EAAAjG,UAAA,OAPAiG,EAAAjG,UAAAqJ,OAAA,SAAAZ,GACAlG,KAAAmF,WAAAjJ,UAAAG,SAAA2D,KAAAG,YAAAqE,YACAxE,KAAAuH,OAEAvH,KAAAiI,KAAA/B,IAMAvN,EAAAY,SAAA,CACAyE,YAAA0F,EACArG,cAAA,eACAhC,SAAA,cACAwB,QAAA,IA0BA,IAAA2L,EAAA,SAAAxP,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,iBAAA0N,GAOA/K,UAAAyC,UAAA,GASAsI,EAAA/K,UAAA0C,YAAA,CAAAsI,oBAAA,+BAaAD,EAAA/K,UAAA,YANA+K,EAAA/K,UAAAiL,YAAA,SAAAC,GACA3I,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAsI,uBAGAzI,KAAA4I,aAAAtC,MAAAuB,MAAAc,EAAA,MAaAH,EAAA/K,UAAA,UAJA+K,EAAA/K,UAAAoL,UAAA,SAAAF,GACA3I,KAAA8I,WAAAxC,MAAAuB,MAAAc,EAAA,IACA3I,KAAA+I,QAAAzC,MAAAuB,MAAA,IAAAc,EAAA,KAMAH,EAAA/K,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAA6L,EAAA/N,SAAA2D,cAAA,OACAoK,EAAA7O,UAAA,uBACA6F,KAAA7C,SAAA4D,YAAAiI,GACAhJ,KAAA4I,aAAAI,GACAA,EAAA/N,SAAA2D,cAAA,QACAzE,UAAA,qBACA6F,KAAA7C,SAAA4D,YAAAiI,GACAhJ,KAAA8I,WAAAE,GACAA,EAAA/N,SAAA2D,cAAA,QACAzE,UAAA,kBACA6F,KAAA7C,SAAA4D,YAAAiI,GACAhJ,KAAA+I,QAAAC,EACAhJ,KAAA4I,aAAAtC,MAAAuB,MAAA,KACA7H,KAAA8I,WAAAxC,MAAAuB,MAAA,OACA7H,KAAA+I,QAAAzC,MAAAuB,MAAA,KACA7H,KAAA7C,SAAAjB,UAAA4C,IAAA,iBAKAnG,EAAAY,SAAA,CACAyE,YAAAwK,EACAnL,cAAA,mBACAhC,SAAA,kBACAwB,QAAA,IA0BA,IAAAoM,EAAA,SAAAjQ,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,cAAAmO,GAOAxL,UAAAyC,UAAA,CAAAkB,aAAA,MASA6H,EAAAxL,UAAA0C,YAAA,CACAwB,WAAA,aACAC,YAAA,cACAC,WAAA,aACAC,YAAA,cACAoH,SAAA,eACAC,UAAA,oBACAC,mBAAA,0BACAC,mBAAA,0BACAjJ,cAAA,uBACAqB,qBAAA,sCACApB,iBAAA,8BACAqB,cAAA,qBACApB,OAAA,cAQA2I,EAAAxL,UAAAsE,UAAA,SAAAvB,GAIA,IADA,IAAA8I,EAAArO,SAAAsO,uBAAAvJ,KAAAG,YAAA+I,UACAjP,EAAA,EAAAA,EAAAqP,EAAApP,OAAAD,IAAA,CACAqP,EAAArP,GAAA2I,cAAA,IAAA5C,KAAAG,YAAAgJ,WAEA7O,aAAA,UAAA0F,KAAAwJ,YAAAlP,aAAA,cACA,IAAAgP,EAAArP,GAAA,eACAqP,EAAArP,GAAA,cAAA+H,mBAWAiH,EAAAxL,UAAAwE,SAAA,SAAAzB,GACAR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,aAQAsH,EAAAxL,UAAAyE,QAAA,SAAA1B,GACAR,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAQAsH,EAAAxL,UAAAgM,WAAA,SAAAjJ,GACAR,KAAAqC,SAOA4G,EAAAxL,UAAAuE,eAAA,WACAhC,KAAAsC,gBACAtC,KAAAuC,oBAOA0G,EAAAxL,UAAA4E,MAAA,WAGAvH,OAAA+E,WAAA,WACAG,KAAAwJ,YAAA/I,QACAQ,KAAAjB,MAAAA,KAAAE,UAAAkB,eAeA6H,EAAAxL,UAAA,cAPAwL,EAAAxL,UAAA6E,cAAA,WACAtC,KAAAwJ,YAAA7I,SACAX,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAyB,aAEA5B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAyB,cAgBAqH,EAAAxL,UAAA,iBAPAwL,EAAAxL,UAAA8E,iBAAA,WACAvC,KAAAwJ,YAAA/G,QACAzC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA0B,YAEA7B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA0B,aAaAoH,EAAAxL,UAAA,QAJAwL,EAAAxL,UAAAiD,QAAA,WACAV,KAAAwJ,YAAA7I,UAAA,EACAX,KAAAgC,kBAYAiH,EAAAxL,UAAA,OAJAwL,EAAAxL,UAAAmD,OAAA,WACAZ,KAAAwJ,YAAA7I,UAAA,EACAX,KAAAgC,kBAYAiH,EAAAxL,UAAA,MAJAwL,EAAAxL,UAAAiF,MAAA,WACA1C,KAAAwJ,YAAA/G,SAAA,EACAzC,KAAA+B,UAAA,OAYAkH,EAAAxL,UAAA,QAJAwL,EAAAxL,UAAAkF,QAAA,WACA3C,KAAAwJ,YAAA/G,SAAA,EACAzC,KAAA+B,UAAA,OAMAkH,EAAAxL,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA6C,KAAAwJ,YAAAxJ,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAgJ,WACAnJ,KAAA0J,oBAAA1J,KAAA+B,UAAAd,KAAAjB,MACAA,KAAA2J,mBAAA3J,KAAA+B,UAAAd,KAAAjB,MACAA,KAAA4J,kBAAA5J,KAAAkC,QAAAjB,KAAAjB,MACAA,KAAA6J,qBAAA7J,KAAAyJ,WAAAxI,KAAAjB,MACA,IAAA8J,EAAA7O,SAAA2D,cAAA,QACAkL,EAAA5N,UAAA4C,IAAAkB,KAAAG,YAAAiJ,oBACA,IAIAvI,EAJAkJ,EAAA9O,SAAA2D,cAAA,QAKA,GAJAmL,EAAA7N,UAAA4C,IAAAkB,KAAAG,YAAAkJ,oBACArJ,KAAA7C,SAAA4D,YAAA+I,GACA9J,KAAA7C,SAAA4D,YAAAgJ,GAEA/J,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAC,eAAA,CACAJ,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsB,uBACAZ,EAAA5F,SAAA2D,cAAA,SACA1C,UAAA4C,IAAAkB,KAAAG,YAAAE,kBACAQ,EAAA3E,UAAA4C,IAAAkB,KAAAG,YAAAC,eACAS,EAAA3E,UAAA4C,IAAAkB,KAAAG,YAAAuB,eACAb,EAAAlC,iBAAA,UAAAqB,KAAA6J,sBACA,IAAA3G,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAO,EAAAE,YAAAmC,GACAlD,KAAA7C,SAAA4D,YAAAF,GAEAb,KAAAwJ,YAAA7K,iBAAA,SAAAqB,KAAA0J,qBACA1J,KAAAwJ,YAAA7K,iBAAA,QAAAqB,KAAA2J,oBACA3J,KAAAwJ,YAAA7K,iBAAA,OAAAqB,KAAA4J,mBACA5J,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAA6J,sBACA7J,KAAAgC,iBACAhC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,eAKAnJ,EAAAY,SAAA,CACAyE,YAAAiL,EACA5L,cAAA,gBACAhC,SAAA,eACAwB,QAAA,IA0BA,IAAAmN,EAAA,SAAAhR,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAiK,MAAAnP,OAAAyE,UAAA2K,iBAEAlK,KAAAC,SAEAnF,OAAA,eAAAkP,GAOAvM,UAAAyC,UAAA,GASA8J,EAAAvM,UAAA0C,YAAA,CACAgK,aAAA,2BACAC,iBAAA,wBACAC,gBAAA,8BACAC,iBAAA,+BACAC,iBAAA,+BACAC,gBAAA,kBACA1I,YAAA,eAQAkI,EAAAvM,UAAAgN,SAAA,SAAAjK,GACAR,KAAA0K,sBAQAV,EAAAvM,UAAAsE,UAAA,SAAAvB,GACAR,KAAA0K,sBAQAV,EAAAvM,UAAA2E,WAAA,SAAA5B,GACAA,EAAA2G,OAAA1G,QAYAuJ,EAAAvM,UAAAkN,sBAAA,SAAAnK,GAGA,GAAAA,EAAA2G,SAAAnH,KAAA7C,SAAA6H,cAAA,CAKAxE,EAAAwG,iBACA,IAAA4D,EAAA,IAAAvD,WAAA,YAAA,CACAF,OAAA3G,EAAA2G,OACA0D,QAAArK,EAAAqK,QACAC,QAAAtK,EAAAsK,QACAC,QAAA/K,KAAA7C,SAAAiJ,wBAAA4E,IAEAhL,KAAA7C,SAAAtB,cAAA+O,KAOAZ,EAAAvM,UAAAiN,mBAAA,WAEA,IAAAO,GAAAjL,KAAA7C,SAAA+N,MAAAlL,KAAA7C,SAAAgO,MAAAnL,KAAA7C,SAAAyC,IAAAI,KAAA7C,SAAAgO,KACA,IAAAF,EACAjL,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAqK,iBAEAxK,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAqK,iBAEAxK,KAAAiK,QACAjK,KAAAoL,iBAAA9E,MAAA+E,KAAAJ,EACAjL,KAAAoL,iBAAA9E,MAAAgF,WAAAL,EACAjL,KAAAuL,iBAAAjF,MAAA+E,KAAA,EAAAJ,EACAjL,KAAAuL,iBAAAjF,MAAAgF,WAAA,EAAAL,IAYAjB,EAAAvM,UAAA,QAHAuM,EAAAvM,UAAAiD,QAAA,WACAV,KAAA7C,SAAAwD,UAAA,GAWAqJ,EAAAvM,UAAA,OAHAuM,EAAAvM,UAAAmD,OAAA,WACAZ,KAAA7C,SAAAwD,UAAA,GAeAqJ,EAAAvM,UAAA,OANAuM,EAAAvM,UAAA+N,OAAA,SAAAN,QACA,IAAAA,IACAlL,KAAA7C,SAAA+N,MAAAA,GAEAlL,KAAA0K,sBAMAV,EAAAvM,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,GAAA6C,KAAAiK,MAAA,CAIA,IAAAwB,EAAAxQ,SAAA2D,cAAA,OACA6M,EAAAvP,UAAA4C,IAAAkB,KAAAG,YAAAgK,cACAnK,KAAA7C,SAAA6H,cAAAC,aAAAwG,EAAAzL,KAAA7C,UACA6C,KAAA7C,SAAA6H,cAAAE,YAAAlF,KAAA7C,UACAsO,EAAA1K,YAAAf,KAAA7C,cACA,CAIA,IAAA4H,EAAA9J,SAAA2D,cAAA,OACAmG,EAAA7I,UAAA4C,IAAAkB,KAAAG,YAAAiK,kBACApK,KAAA7C,SAAA6H,cAAAC,aAAAF,EAAA/E,KAAA7C,UACA6C,KAAA7C,SAAA6H,cAAAE,YAAAlF,KAAA7C,UACA4H,EAAAhE,YAAAf,KAAA7C,UACA,IAAAuO,EAAAzQ,SAAA2D,cAAA,OACA8M,EAAAxP,UAAA4C,IAAAkB,KAAAG,YAAAkK,iBACAtF,EAAAhE,YAAA2K,GACA1L,KAAAoL,iBAAAnQ,SAAA2D,cAAA,OACAoB,KAAAoL,iBAAAlP,UAAA4C,IAAAkB,KAAAG,YAAAmK,kBACAoB,EAAA3K,YAAAf,KAAAoL,kBACApL,KAAAuL,iBAAAtQ,SAAA2D,cAAA,OACAoB,KAAAuL,iBAAArP,UAAA4C,IAAAkB,KAAAG,YAAAoK,kBACAmB,EAAA3K,YAAAf,KAAAuL,kBAEAvL,KAAA2L,kBAAA3L,KAAAyK,SAAAxJ,KAAAjB,MACAA,KAAA4L,mBAAA5L,KAAA+B,UAAAd,KAAAjB,MACAA,KAAA6L,oBAAA7L,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAA8L,+BAAA9L,KAAA2K,sBAAA1J,KAAAjB,MACAA,KAAA7C,SAAAwB,iBAAA,QAAAqB,KAAA2L,mBACA3L,KAAA7C,SAAAwB,iBAAA,SAAAqB,KAAA4L,oBACA5L,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAA6L,qBACA7L,KAAA7C,SAAA6H,cAAArG,iBAAA,YAAAqB,KAAA8L,gCACA9L,KAAA0K,qBACA1K,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,eAKAnJ,EAAAY,SAAA,CACAyE,YAAAgM,EACA3M,cAAA,iBACAhC,SAAA,gBACAwB,QAAA,IAyBA,IAAAkP,EAAA,SAAA/S,GAIA,GAHAgH,KAAA7C,SAAAnE,EACAgH,KAAAgM,aAAAhM,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAiM,YAAAC,SACAlM,KAAAmM,eAAAnM,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAiM,YAAAG,SACApM,KAAAgM,aACA,MAAA,IAAArQ,MAAA,mDAEA,IAAAqE,KAAAmM,eACA,MAAA,IAAAxQ,MAAA,mDAEAqE,KAAAqM,QAAA,EACArM,KAAAsM,oBAAAC,EACAvM,KAAAwM,cAAAD,EACAvM,KAAAyM,iBAAAF,EACAvM,KAAA0M,qBAAA,GACA1M,KAAA2M,kBAAA,KAEA7R,OAAA,iBAAAiR,GAOAtO,UAAAyC,UAAA,CAEA0M,iBAAA,KAUAb,EAAAtO,UAAAwO,YAAA,CACAY,SAAA,eACAX,QAAA,qBACAE,OAAA,uBACAU,OAAA,wBAOAf,EAAAtO,UAAAsP,iBAAA,WACA/M,KAAA7C,SAAAb,aAAA,cAAA,QACA0D,KAAAsM,iBACAtM,KAAAmM,eAAAa,YAAAhN,KAAAyM,YACAzM,KAAAmM,eAAAxN,iBAAA,QAAAqB,KAAAsM,gBACAtM,KAAA2M,kBAAA,IAEA3M,KAAAgM,aAAAgB,YAAAhN,KAAAwM,SACAxM,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAiM,YAAAa,QACA9M,KAAA7C,SAAAb,aAAA,cAAA,SACAuD,WAAAG,KAAAiN,SAAAhM,KAAAjB,MAAAA,KAAAkN,WAqCAnB,EAAAtO,UAAA,aA7BAsO,EAAAtO,UAAA0P,aAAA,SAAAC,GACA,QAAAb,IAAAa,EACA,MAAA,IAAAzR,MAAA,oEAEA,QAAA4Q,IAAAa,EAAA,QACA,MAAA,IAAAzR,MAAA,6CAEA,GAAAyR,EAAA,gBAAAA,EAAA,WACA,MAAA,IAAAzR,MAAA,gDAEAqE,KAAAqM,OACArM,KAAA0M,qBAAAzQ,KAAAmR,IAEApN,KAAAqM,QAAA,EACArM,KAAAwM,SAAAY,EAAA,QACAA,EAAA,QACApN,KAAAkN,SAAAE,EAAA,QAEApN,KAAAkN,SAAA,KAEAE,EAAA,gBACApN,KAAAsM,eAAAc,EAAA,eAEAA,EAAA,aACApN,KAAAyM,YAAAW,EAAA,YAEApN,KAAA+M,qBAUAhB,EAAAtO,UAAA4P,YAAA,WACA,EAAArN,KAAA0M,qBAAAxS,QACA8F,KAAAmN,aAAAnN,KAAA0M,qBAAAY,UAQAvB,EAAAtO,UAAAwP,SAAA,WACAjN,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAiM,YAAAa,QACAjN,WAAA,WACAG,KAAA7C,SAAAb,aAAA,cAAA,QACA0D,KAAAgM,aAAAgB,YAAA,GACAO,QAAAvN,KAAAmM,eAAA7R,aAAA,kBACA0F,KAAA2M,kBAAA,GACA3M,KAAAmM,eAAAa,YAAA,GACAhN,KAAAmM,eAAA7D,oBAAA,QAAAtI,KAAAsM,iBAEAtM,KAAAsM,oBAAAC,EACAvM,KAAAwM,cAAAD,EACAvM,KAAAyM,iBAAAF,EACAvM,KAAAqM,QAAA,EACArM,KAAAqN,eACApM,KAAAjB,MAAAA,KAAAE,UAAA0M,mBAQAb,EAAAtO,UAAAkP,iBAAA,SAAAzB,GACAA,EACAlL,KAAAmM,eAAA7P,aAAA,cAAA,QAEA0D,KAAAmM,eAAAqB,gBAAA,gBAKA7U,EAAAY,SAAA,CACAyE,YAAA+N,EACA1O,cAAA,mBACAhC,SAAA,kBACAwB,QAAA,IA0BA,IAAA4Q,EAAA,SAAAzU,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,gBAAA2S,GAOAhQ,UAAAyC,UAAA,CAAAwN,wBAAA,GASAD,EAAAhQ,UAAA0C,YAAA,CACAwN,kBAAA,qBACAC,2BAAA,8BACAC,mBAAA,sBACAC,sBAAA,yBACAC,iBAAA,oBACAC,kBAAA,sBAmCAP,EAAAhQ,UAAA,YA3BAgQ,EAAAhQ,UAAAwQ,YAAA,SAAAC,GACA,IAAAC,EAAAlT,SAAA2D,cAAA,OACAuP,EAAAjS,UAAA4C,IAAAkB,KAAAG,YAAAwN,mBACAQ,EAAAjS,UAAA4C,IAAAkB,KAAAG,YAAAwN,kBAAA,IAAAO,GACA,IAAAE,EAAAnT,SAAA2D,cAAA,OACAwP,EAAAlS,UAAA4C,IAAAkB,KAAAG,YAAAyN,4BACAQ,EAAAlS,UAAA4C,IAAAkB,KAAAG,YAAA4N,kBACA,IAAAM,EAAApT,SAAA2D,cAAA,OACAyP,EAAAnS,UAAA4C,IAAAkB,KAAAG,YAAA2N,uBACA,IAAAQ,EAAArT,SAAA2D,cAAA,OACA0P,EAAApS,UAAA4C,IAAAkB,KAAAG,YAAAyN,4BACAU,EAAApS,UAAA4C,IAAAkB,KAAAG,YAAA6N,mBAMA,IALA,IAAAO,EAAA,CACAH,EACAC,EACAC,GAEArU,EAAA,EAAAA,EAAAsU,EAAArU,OAAAD,IAAA,CACA,IAAAuU,EAAAvT,SAAA2D,cAAA,OACA4P,EAAAtS,UAAA4C,IAAAkB,KAAAG,YAAA0N,oBACAU,EAAAtU,GAAA8G,YAAAyN,GAEAL,EAAApN,YAAAqN,GACAD,EAAApN,YAAAsN,GACAF,EAAApN,YAAAuN,GACAtO,KAAA7C,SAAA4D,YAAAoN,IAYAV,EAAAhQ,UAAA,KAHAgQ,EAAAhQ,UAAAgR,KAAA,WACAzO,KAAA7C,SAAAjB,UAAAiG,OAAA,cAaAsL,EAAAhQ,UAAA,MAHAgQ,EAAAhQ,UAAAiR,MAAA,WACA1O,KAAA7C,SAAAjB,UAAA4C,IAAA,cAMA2O,EAAAhQ,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAA,IAAAlD,EAAA,EAAAA,GAAA+F,KAAAE,UAAAwN,wBAAAzT,IACA+F,KAAAiO,YAAAhU,GAEA+F,KAAA7C,SAAAjB,UAAA4C,IAAA,iBAKAnG,EAAAY,SAAA,CACAyE,YAAAyP,EACApQ,cAAA,kBACAhC,SAAA,iBACAwB,QAAA,IA0BA,IAAA8R,EAAA,SAAA3V,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,eAAA6T,GAOAlR,UAAAyC,UAAA,CAAAkB,aAAA,MASAuN,EAAAlR,UAAA0C,YAAA,CACAkB,MAAA,oBACAuN,MAAA,oBACAC,MAAA,oBACAtN,aAAA,2BACAnB,cAAA,uBACAqB,qBAAA,sCACApB,iBAAA,+BACAqB,cAAA,qBACApB,OAAA,aACAqB,WAAA,aACAC,YAAA,cACAC,WAAA,cAQA8M,EAAAlR,UAAAsE,UAAA,SAAAvB,GACAR,KAAAgC,kBAQA2M,EAAAlR,UAAAwE,SAAA,SAAAzB,GACAR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,aAQAgN,EAAAlR,UAAAyE,QAAA,SAAA1B,GACAR,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAQAgN,EAAAlR,UAAA2E,WAAA,SAAA5B,GACAR,KAAAqC,SAOAsM,EAAAlR,UAAAuE,eAAA,WACAhC,KAAAsC,gBACAtC,KAAAuC,oBAOAoM,EAAAlR,UAAA4E,MAAA,WAGAvH,OAAA+E,WAAA,WACAG,KAAAwC,cAAA/B,QACAQ,KAAAjB,MAAAA,KAAAE,UAAAkB,eAeAuN,EAAAlR,UAAA,cAPAkR,EAAAlR,UAAA6E,cAAA,WACAtC,KAAAwC,cAAA7B,SACAX,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAyB,aAEA5B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAyB,cAgBA+M,EAAAlR,UAAA,iBAPAkR,EAAAlR,UAAA8E,iBAAA,WACAvC,KAAAwC,cAAAC,QACAzC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA0B,YAEA7B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA0B,aAaA8M,EAAAlR,UAAA,QAJAkR,EAAAlR,UAAAiD,QAAA,WACAV,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYA2M,EAAAlR,UAAA,OAJAkR,EAAAlR,UAAAmD,OAAA,WACAZ,KAAAwC,cAAA7B,UAAA,EACAX,KAAAgC,kBAYA2M,EAAAlR,UAAA,GAJAkR,EAAAlR,UAAAqR,GAAA,WACA9O,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAYA2M,EAAAlR,UAAA,IAJAkR,EAAAlR,UAAAsR,IAAA,WACA/O,KAAAwC,cAAAC,SAAA,EACAzC,KAAAgC,kBAMA2M,EAAAlR,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA6C,KAAAwC,cAAAxC,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAkB,OACA,IAAA2N,EAAA/T,SAAA2D,cAAA,OACAoQ,EAAA9S,UAAA4C,IAAAkB,KAAAG,YAAAyO,OACA,IAAAK,EAAAhU,SAAA2D,cAAA,OACAqQ,EAAA/S,UAAA4C,IAAAkB,KAAAG,YAAA0O,OACA,IAAAK,EAAAjU,SAAA2D,cAAA,QAMA,GALAsQ,EAAAhT,UAAA4C,IAAAkB,KAAAG,YAAAoB,cACA0N,EAAAlO,YAAAmO,GACAlP,KAAA7C,SAAA4D,YAAAiO,GACAhP,KAAA7C,SAAA4D,YAAAkO,GACAjP,KAAA6L,oBAAA7L,KAAAoC,WAAAnB,KAAAjB,MACAA,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAC,eAAA,CACAJ,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAsB,sBACAzB,KAAAgD,wBAAA/H,SAAA2D,cAAA,QACAoB,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAE,kBACAL,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAC,eACAJ,KAAAgD,wBAAA9G,UAAA4C,IAAAkB,KAAAG,YAAAuB,eACA1B,KAAAgD,wBAAArE,iBAAA,UAAAqB,KAAA6L,qBACA,IAAA3I,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAkB,KAAAG,YAAAG,QACAN,KAAAgD,wBAAAjC,YAAAmC,GACAlD,KAAA7C,SAAA4D,YAAAf,KAAAgD,yBAEAhD,KAAA4L,mBAAA5L,KAAA+B,UAAAd,KAAAjB,MACAA,KAAAmP,kBAAAnP,KAAAiC,SAAAhB,KAAAjB,MACAA,KAAAoP,iBAAApP,KAAAkC,QAAAjB,KAAAjB,MACAA,KAAAwC,cAAA7D,iBAAA,SAAAqB,KAAA4L,oBACA5L,KAAAwC,cAAA7D,iBAAA,QAAAqB,KAAAmP,mBACAnP,KAAAwC,cAAA7D,iBAAA,OAAAqB,KAAAoP,kBACApP,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAA6L,qBACA7L,KAAAgC,iBACAhC,KAAA7C,SAAAjB,UAAA4C,IAAA,iBAKAnG,EAAAY,SAAA,CACAyE,YAAA2Q,EACAtR,cAAA,iBACAhC,SAAA,gBACAwB,QAAA,IA0BA,IAAAwS,EAAA,SAAArW,GAEAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,QAiFA,SAAAqP,EAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,GAAAC,EAAArS,SAAAjB,UAAAG,SAAAmT,EAAArP,YAAAsP,sBAAA,CACA,IAAA5O,EAAA5F,SAAA2D,cAAA,QACAiC,EAAA3E,UAAA4C,IAAA0Q,EAAArP,YAAAuP,sBACA7O,EAAA3E,UAAA4C,IAAA0Q,EAAArP,YAAAsP,sBACA,IAAAvM,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAA0Q,EAAArP,YAAAwP,YACA9O,EAAAE,YAAAmC,GACAqM,EAAAxO,YAAAF,GAEA0O,EAAA5Q,iBAAA,QAAA,SAAAyI,GACA,GAAA,MAAAmI,EAAAjV,aAAA,QAAAsV,OAAA,GAAA,CACAxI,EAAAJ,iBACA,IAAA6I,EAAAN,EAAAM,KAAAtV,MAAA,KAAA,GACAuV,EAAAN,EAAArS,SAAAyF,cAAA,IAAAiN,GACAL,EAAAO,iBACAP,EAAAQ,mBACAT,EAAArT,UAAA4C,IAAA0Q,EAAArP,YAAA8P,cACAH,EAAA5T,UAAA4C,IAAA0Q,EAAArP,YAAA8P,mBAlGAnV,OAAA,aAAAuU,GAOA5R,UAAAyC,UAAA,GASAmP,EAAA5R,UAAA0C,YAAA,CACA+P,UAAA,gBACAC,YAAA,kBACAF,aAAA,YACAG,eAAA,cACAX,qBAAA,uBACAC,qBAAA,6BACAC,WAAA,aACAU,mCAAA,uCAOAhB,EAAA5R,UAAA6S,UAAA,WACAtQ,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAsP,uBACAzP,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAkQ,oCAGArQ,KAAAuQ,MAAAvQ,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAA+P,WACAlQ,KAAAwQ,QAAAxQ,KAAA7C,SAAA5B,iBAAA,IAAAyE,KAAAG,YAAAgQ,aAEA,IAAA,IAAAlW,EAAA,EAAAA,EAAA+F,KAAAuQ,MAAArW,OAAAD,IACA,IAAAqV,EAAAtP,KAAAuQ,MAAAtW,GAAA+F,MAEAA,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAiQ,iBAOAf,EAAA5R,UAAAsS,eAAA,WACA,IAAA,IAAAU,EAAA,EAAAA,EAAAzQ,KAAAuQ,MAAArW,OAAAuW,IACAzQ,KAAAuQ,MAAAE,GAAAvU,UAAAiG,OAAAnC,KAAAG,YAAA8P,eAQAZ,EAAA5R,UAAAuS,iBAAA,WACA,IAAA,IAAAtT,EAAA,EAAAA,EAAAsD,KAAAwQ,QAAAtW,OAAAwC,IACAsD,KAAAwQ,QAAA9T,GAAAR,UAAAiG,OAAAnC,KAAAG,YAAA8P,eAMAZ,EAAA5R,UAAAwC,KAAA,WACAD,KAAA7C,UACA6C,KAAAsQ,aAoCA3X,EAAAY,SAAA,CACAyE,YAAAqR,EACAhS,cAAA,eACAhC,SAAA,gBA0BA,IAAAqV,EAAA,SAAA1X,GACAgH,KAAA7C,SAAAnE,EACAgH,KAAA2Q,QAAA3Q,KAAAE,UAAA0Q,YAEA5Q,KAAAC,SAEAnF,OAAA,kBAAA4V,GAOAjT,UAAAyC,UAAA,CACA0Q,aAAA,EACAC,mBAAA,WAUAH,EAAAjT,UAAA0C,YAAA,CACA2Q,MAAA,uBACAzP,MAAA,uBACA0P,SAAA,WACApP,WAAA,aACAC,YAAA,cACAoP,WAAA,aACAlP,YAAA,cACAmP,gBAAA,mBAQAP,EAAAjT,UAAAyT,WAAA,SAAA1Q,GACA,IAAA2Q,EAAA3Q,EAAA2G,OAAA+D,MAAA3Q,MAAA,MAAAL,OACA,KAAAsG,EAAAuG,SACAoK,GAAAnR,KAAA2Q,SACAnQ,EAAAwG,kBAUA0J,EAAAjT,UAAAwE,SAAA,SAAAzB,GACAR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,aAQA+O,EAAAjT,UAAAyE,QAAA,SAAA1B,GACAR,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAQA+O,EAAAjT,UAAA2T,SAAA,SAAA5Q,GACAR,KAAAgC,kBAOA0O,EAAAjT,UAAAuE,eAAA,WACAhC,KAAAsC,gBACAtC,KAAAqR,gBACArR,KAAAsR,aACAtR,KAAAuR,cAeAb,EAAAjT,UAAA,cAPAiT,EAAAjT,UAAA6E,cAAA,WACAtC,KAAAwR,OAAA7Q,SACAX,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAyB,aAEA5B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAyB,cAgBA8O,EAAAjT,UAAA,WAPAiT,EAAAjT,UAAA8T,WAAA,WACAhE,QAAAvN,KAAA7C,SAAAyF,cAAA,WACA5C,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAwB,YAEA3B,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAwB,aAkBA+O,EAAAjT,UAAA,cATAiT,EAAAjT,UAAA4T,cAAA,WACArR,KAAAwR,OAAAC,WACAzR,KAAAwR,OAAAC,SAAAC,MACA1R,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA6Q,YAEAhR,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA6Q,cAiBAN,EAAAjT,UAAA,WAPAiT,EAAAjT,UAAA6T,WAAA,WACAtR,KAAAwR,OAAAtG,OAAA,EAAAlL,KAAAwR,OAAAtG,MAAAhR,OACA8F,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA4Q,UAEA/Q,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAA4Q,WAaAL,EAAAjT,UAAA,QAJAiT,EAAAjT,UAAAiD,QAAA,WACAV,KAAAwR,OAAA7Q,UAAA,EACAX,KAAAgC,kBAYA0O,EAAAjT,UAAA,OAJAiT,EAAAjT,UAAAmD,OAAA,WACAZ,KAAAwR,OAAA7Q,UAAA,EACAX,KAAAgC,kBAaA0O,EAAAjT,UAAA,OAJAiT,EAAAjT,UAAA+N,OAAA,SAAAN,GACAlL,KAAAwR,OAAAtG,MAAAA,GAAA,GACAlL,KAAAgC,kBAMA0O,EAAAjT,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,WACA6C,KAAA2R,OAAA3R,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAA2Q,OACA9Q,KAAAwR,OAAAxR,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAkB,OACArB,KAAAwR,QAAA,CACAxR,KAAAwR,OAAAhK,aAAAxH,KAAAE,UAAA2Q,sBACA7Q,KAAA2Q,QAAAiB,SAAA5R,KAAAwR,OAAAlX,aAAA0F,KAAAE,UAAA2Q,oBAAA,IACAgB,MAAA7R,KAAA2Q,WACA3Q,KAAA2Q,QAAA3Q,KAAAE,UAAA0Q,cAGA5Q,KAAAwR,OAAAhK,aAAA,gBACAxH,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA8Q,iBAEAjR,KAAA8R,0BAAA9R,KAAAgC,eAAAf,KAAAjB,MACAA,KAAAmP,kBAAAnP,KAAAiC,SAAAhB,KAAAjB,MACAA,KAAAoP,iBAAApP,KAAAkC,QAAAjB,KAAAjB,MACAA,KAAA+R,kBAAA/R,KAAAoR,SAAAnQ,KAAAjB,MACAA,KAAAwR,OAAA7S,iBAAA,QAAAqB,KAAA8R,2BACA9R,KAAAwR,OAAA7S,iBAAA,QAAAqB,KAAAmP,mBACAnP,KAAAwR,OAAA7S,iBAAA,OAAAqB,KAAAoP,kBACApP,KAAAwR,OAAA7S,iBAAA,QAAAqB,KAAA+R,mBACA/R,KAAA2Q,UAAA3Q,KAAAE,UAAA0Q,cAGA5Q,KAAAgS,oBAAAhS,KAAAkR,WAAAjQ,KAAAjB,MACAA,KAAAwR,OAAA7S,iBAAA,UAAAqB,KAAAgS,sBAEA,IAAAC,EAAAjS,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAA6Q,YACAhR,KAAAgC,iBACAhC,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,aACAmQ,GACAjS,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA6Q,YAEAhR,KAAAwR,OAAAhK,aAAA,eACAxH,KAAA7C,SAAA8J,QACAjH,KAAAuR,gBAOA5Y,EAAAY,SAAA,CACAyE,YAAA0S,EACArT,cAAA,oBACAhC,SAAA,mBACAwB,QAAA,IA0BA,IAAAqV,EAAA,SAAAlZ,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,gBAAAoX,GAOAzU,UAAAyC,UAAA,GASAgS,EAAAzU,UAAA0C,YAAA,CACAgS,UAAA,YACAC,OAAA,sBACAC,KAAA,oBACAC,MAAA,qBACAC,IAAA,oBAQAL,EAAAzU,UAAA+U,kBAAA,SAAAhS,GACA,IAAAiS,EAAAjS,EAAA2G,OAAAf,wBACAO,EAAA8L,EAAA9L,KAAA8L,EAAA5K,MAAA,EACArB,EAAAiM,EAAAjM,IAAAiM,EAAA7K,OAAA,EACA8K,EAAA1S,KAAA7C,SAAAwV,YAAA,GAAA,EACAC,EAAA5S,KAAA7C,SAAAuJ,aAAA,GAAA,EACA1G,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAkS,OAAArS,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAmS,QACA3L,EAAA8L,EAAA5K,MAAA,EAGA7H,KAAA7C,SAAAmJ,MAAAsM,UAFApM,EAAAoM,EAAA,EACA5S,KAAA7C,SAAAmJ,MAAAE,IAAA,KAGAxG,KAAA7C,SAAAmJ,MAAAE,IAAAA,EAAA,KACAoM,EAAA,OAKA5S,KAAA7C,SAAAmJ,MAAAoM,WAFA/L,EAAA+L,EAAA,EACA1S,KAAA7C,SAAAmJ,MAAAK,KAAA,KAGA3G,KAAA7C,SAAAmJ,MAAAK,KAAAA,EAAA,KACA+L,EAAA,MAGA1S,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAoS,KACAvS,KAAA7C,SAAAmJ,MAAAE,IAAAiM,EAAAjM,IAAAxG,KAAA7C,SAAAuJ,aAAA,GAAA,KACA1G,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAmS,OACAtS,KAAA7C,SAAAmJ,MAAAK,KAAA8L,EAAA9L,KAAA8L,EAAA5K,MAAA,GAAA,KACA7H,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAkS,MACArS,KAAA7C,SAAAmJ,MAAAK,KAAA8L,EAAA9L,KAAA3G,KAAA7C,SAAAwV,YAAA,GAAA,KAEA3S,KAAA7C,SAAAmJ,MAAAE,IAAAiM,EAAAjM,IAAAiM,EAAA7K,OAAA,GAAA,KAEA5H,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAgS,YAOAD,EAAAzU,UAAAoV,aAAA,WACA7S,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAgS,YAKAD,EAAAzU,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAAmI,EAAAtF,KAAA7C,SAAA7C,aAAA,QAAA0F,KAAA7C,SAAA7C,aAAA,gBACAgL,IACAtF,KAAAyF,YAAAxK,SAAAuK,eAAAF,IAEAtF,KAAAyF,cAEAzF,KAAAyF,YAAA+B,aAAA,aACAxH,KAAAyF,YAAAnJ,aAAA,WAAA,KAEA0D,KAAA8S,uBAAA9S,KAAAwS,kBAAAvR,KAAAjB,MACAA,KAAA+S,gCAAA/S,KAAA6S,aAAA5R,KAAAjB,MACAA,KAAAyF,YAAA9G,iBAAA,aAAAqB,KAAA8S,wBAAA,GACA9S,KAAAyF,YAAA9G,iBAAA,WAAAqB,KAAA8S,wBAAA,GACA9S,KAAAyF,YAAA9G,iBAAA,aAAAqB,KAAA+S,iCAAA,GACAjY,OAAA6D,iBAAA,SAAAqB,KAAA+S,iCAAA,GACAjY,OAAA6D,iBAAA,aAAAqB,KAAA+S,oCAMApa,EAAAY,SAAA,CACAyE,YAAAkU,EACA7U,cAAA,kBACAhC,SAAA,gBA0BA,IAAA2X,EAAA,SAAAha,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,QA6ZA,SAAAgT,EAAA1D,EAAA2D,EAAAC,EAAAC,GAIA,SAAAC,IACA,IAAAxD,EAAAN,EAAAM,KAAAtV,MAAA,KAAA,GACAuV,EAAAsD,EAAAE,SAAA1Q,cAAA,IAAAiN,GACAuD,EAAArD,eAAAmD,GACAE,EAAApD,iBAAAmD,GACA5D,EAAArT,UAAA4C,IAAAsU,EAAAjT,YAAAgS,WACArC,EAAA5T,UAAA4C,IAAAsU,EAAAjT,YAAAgS,WAEA,GAAAiB,EAAAG,QAAArX,UAAAG,SAAA+W,EAAAjT,YAAAqD,kBAAA,CACA,IAAA3C,EAAA5F,SAAA2D,cAAA,QACAiC,EAAA3E,UAAA4C,IAAAsU,EAAAjT,YAAAE,kBACAQ,EAAA3E,UAAA4C,IAAAsU,EAAAjT,YAAAqD,kBACA,IAAAN,EAAAjI,SAAA2D,cAAA,QACAsE,EAAAhH,UAAA4C,IAAAsU,EAAAjT,YAAAG,QACAO,EAAAE,YAAAmC,GACAqM,EAAAxO,YAAAF,GAEAuS,EAAAG,QAAArX,UAAAG,SAAA+W,EAAAjT,YAAAqT,oBACAjE,EAAA5Q,iBAAA,QAAA,SAAAyI,GACA,MAAAmI,EAAAjV,aAAA,QAAAsV,OAAA,KACAxI,EAAAJ,iBACAqM,OAIA9D,EAAAtH,KAAAoL,GAxbAvY,OAAA,eAAAkY,GAOAvV,UAAAyC,UAAA,CACAuT,UAAA,sBACAC,kBAAA,IACAC,eAAA,IACAC,UAAA,WACAC,aAAA,eACAC,cAAA,iBAQAd,EAAAvV,UAAAqG,UAAA,CACAC,MAAA,GACAC,OAAA,GACAC,MAAA,IAQA+O,EAAAvV,UAAAsW,MAAA,CACAC,SAAA,EACAC,OAAA,EACAC,UAAA,EACAC,OAAA,GAUAnB,EAAAvV,UAAA0C,YAAA,CACAiE,UAAA,wBACAgQ,OAAA,qBACAC,OAAA,qBACAC,QAAA,sBACAC,WAAA,4BACAC,KAAA,iBACAhR,iBAAA,uBACAnD,iBAAA,mCACAC,OAAA,aACAmB,qBAAA,sCACAgT,cAAA,6BACAC,iBAAA,gCACAC,cAAA,6BACAC,aAAA,2BACAC,WAAA,yBACAC,QAAA,sBACAC,cAAA,gCACAC,IAAA,kBACAC,eAAA,6BACAC,oBAAA,kCACAC,qBAAA,mCACA3B,kBAAA,gCACA4B,MAAA,wBACAC,WAAA,aACAC,SAAA,WACAC,qBAAA,uBACAC,eAAA,oBACAC,WAAA,aACAC,gBAAA,kBACAC,eAAA,aACAxD,UAAA,YACArQ,YAAA,cACA2C,aAAA,eACAmR,gBAAA,gCACAC,gBAAA,iCAOA7C,EAAAvV,UAAAqY,sBAAA,WACA,IAAA9V,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAsE,cAAA,CAGA,IAAAuR,GAAAhW,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAuV,kBAAA1V,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyU,cACA,EAAA5U,KAAAsT,SAAA2C,YAAAjW,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAsV,aACAzV,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAqV,gBACAxV,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAsV,YACAO,GACAhW,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAsE,eAEAzE,KAAAsT,SAAA2C,WAAA,GAAAjW,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAsV,cACAzV,KAAA+V,QAAA7Z,UAAAiG,OAAAnC,KAAAG,YAAAqV,gBACAxV,KAAA+V,QAAA7Z,UAAAiG,OAAAnC,KAAAG,YAAAsV,YACAO,GACAhW,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAsE,iBAUAuO,EAAAvV,UAAAyY,sBAAA,SAAAhQ,GAEAA,EAAAa,UAAA/G,KAAA8D,UAAAE,QAAAhE,KAAAmW,QAAAja,UAAAG,SAAA2D,KAAAG,YAAAwV,iBACA3V,KAAAoW,gBAQApD,EAAAvV,UAAA4Y,mBAAA,WACArW,KAAAsW,sBAAAC,QACAvW,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAuV,kBAEA1V,KAAA7C,SAAAjB,UAAAiG,OAAAnC,KAAAG,YAAAuV,iBAEA1V,KAAAmW,UACAnW,KAAAmW,QAAAja,UAAAiG,OAAAnC,KAAAG,YAAAwV,gBACA3V,KAAAwW,YAAAta,UAAAiG,OAAAnC,KAAAG,YAAAwV,mBAUA3C,EAAAvV,UAAAgZ,qBAAA,SAAAvQ,GACA,GAAAA,GAAA,YAAAA,EAAAwQ,KAAA,CACA,GAAAxQ,EAAAa,UAAA/G,KAAA8D,UAAAG,OAAAiC,EAAAa,UAAA/G,KAAA8D,UAAAC,MAKA,OAHAmC,EAAAc,iBAMAhH,KAAAoW,gBAOApD,EAAAvV,UAAAkZ,4BAAA,WACA3W,KAAA+V,QAAA7Z,UAAAiG,OAAAnC,KAAAG,YAAAsE,eAOAuO,EAAAvV,UAAAmZ,oBAAA,WACA5W,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAsV,cACAzV,KAAA+V,QAAA7Z,UAAAiG,OAAAnC,KAAAG,YAAAsV,YACAzV,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAsE,gBAQAuO,EAAAvV,UAAAsS,eAAA,SAAA8G,GACA,IAAA,IAAApG,EAAA,EAAAA,EAAAoG,EAAA3c,OAAAuW,IACAoG,EAAApG,GAAAvU,UAAAiG,OAAAnC,KAAAG,YAAAgS,YAQAa,EAAAvV,UAAAuS,iBAAA,SAAAmD,GACA,IAAA,IAAAzW,EAAA,EAAAA,EAAAyW,EAAAjZ,OAAAwC,IACAyW,EAAAzW,GAAAR,UAAAiG,OAAAnC,KAAAG,YAAAgS,YAqBAa,EAAAvV,UAAA,aAbAuV,EAAAvV,UAAA2Y,aAAA,WACA,IAAAU,EAAA9W,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAoU,YACAvU,KAAAmW,QAAAja,UAAA4K,OAAA9G,KAAAG,YAAAwV,gBACA3V,KAAAwW,YAAAta,UAAA4K,OAAA9G,KAAAG,YAAAwV,gBAEA3V,KAAAmW,QAAAja,UAAAG,SAAA2D,KAAAG,YAAAwV,iBACA3V,KAAAmW,QAAA7Z,aAAA,cAAA,SACAwa,EAAAxa,aAAA,gBAAA,UAEA0D,KAAAmW,QAAA7Z,aAAA,cAAA,QACAwa,EAAAxa,aAAA,gBAAA,WAOA0W,EAAAvV,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAA4H,EAAA9J,SAAA2D,cAAA,OACAmG,EAAA7I,UAAA4C,IAAAkB,KAAAG,YAAAiE,WACA,IAAA2S,EAAA/W,KAAA7C,SAAAyF,cAAA,UACA5C,KAAA7C,SAAA6H,cAAAC,aAAAF,EAAA/E,KAAA7C,UACA6C,KAAA7C,SAAA6H,cAAAE,YAAAlF,KAAA7C,UACA4H,EAAAhE,YAAAf,KAAA7C,UACA4Z,GACAA,EAAA9P,QAIA,IAFA,IAAA+P,EAAAhX,KAAA7C,SAAA8Z,WACAC,EAAAF,EAAA9c,OACAid,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CACA,IAAAC,EAAAJ,EAAAG,GACAC,EAAAlb,WAAAkb,EAAAlb,UAAAG,SAAA2D,KAAAG,YAAAiU,UACApU,KAAA+V,QAAAqB,GAEAA,EAAAlb,WAAAkb,EAAAlb,UAAAG,SAAA2D,KAAAG,YAAAkU,UACArU,KAAAmW,QAAAiB,GAEAA,EAAAlb,WAAAkb,EAAAlb,UAAAG,SAAA2D,KAAAG,YAAAmU,WACAtU,KAAAsT,SAAA8D,GAGAtc,OAAA6D,iBAAA,WAAA,SAAAyI,GACAA,EAAAiQ,YAGArX,KAAA7C,SAAAmJ,MAAAgR,UAAA,SACAnY,sBAAA,WACAa,KAAA7C,SAAAmJ,MAAAgR,UAAA,IACArW,KAAAjB,SAEAiB,KAAAjB,OAAA,GACAA,KAAA+V,UACA/V,KAAAuT,QAAAvT,KAAA+V,QAAAnT,cAAA,IAAA5C,KAAAG,YAAA2U,UAEA,IAAAyC,EAAAvX,KAAA+T,MAAAC,SA+BA,GA9BAhU,KAAA+V,UACA/V,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAsU,eACA8C,EAAAvX,KAAA+T,MAAAE,OACAjU,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAuU,mBACA6C,EAAAvX,KAAA+T,MAAAG,UACAlU,KAAA+V,QAAApX,iBAAA,gBAAAqB,KAAA2W,4BAAA1V,KAAAjB,OACAA,KAAA+V,QAAApX,iBAAA,QAAAqB,KAAA4W,oBAAA3V,KAAAjB,QACAA,KAAA+V,QAAA7Z,UAAAG,SAAA2D,KAAAG,YAAAwU,iBACA4C,EAAAvX,KAAA+T,MAAAI,OACApP,EAAA7I,UAAA4C,IAAAkB,KAAAG,YAAAoV,uBAEAgC,IAAAvX,KAAA+T,MAAAC,UACAhU,KAAA+V,QAAA7Z,UAAA4C,IAAAkB,KAAAG,YAAAqV,gBACAxV,KAAAuT,SACAvT,KAAAuT,QAAArX,UAAA4C,IAAAkB,KAAAG,YAAAqV,iBAEA+B,IAAAvX,KAAA+T,MAAAE,QAAAsD,IAAAvX,KAAA+T,MAAAI,QACAnU,KAAA+V,QAAA7Z,UAAAiG,OAAAnC,KAAAG,YAAAqV,gBACAxV,KAAAuT,SACAvT,KAAAuT,QAAArX,UAAAiG,OAAAnC,KAAAG,YAAAqV,iBAEA+B,IAAAvX,KAAA+T,MAAAG,YAIAlU,KAAAsT,SAAA3U,iBAAA,SAAAqB,KAAA8V,sBAAA7U,KAAAjB,OACAA,KAAA8V,0BAIA9V,KAAAmW,QAAA,CACA,IAAAW,EAAA9W,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAoU,YACA,IAAAuC,EAAA,EACAA,EAAA7b,SAAA2D,cAAA,QACAtC,aAAA,gBAAA,SACAwa,EAAAxa,aAAA,OAAA,UACAwa,EAAAxa,aAAA,WAAA,KACAwa,EAAA5a,UAAA4C,IAAAkB,KAAAG,YAAAoU,YACA,IAAAiD,EAAAvc,SAAA2D,cAAA,KACA4Y,EAAAtb,UAAA4C,IAAAkB,KAAAG,YAAAqU,MACAgD,EAAAC,UAAAzX,KAAAE,UAAA0T,UACAkD,EAAA/V,YAAAyW,GAEAxX,KAAAmW,QAAAja,UAAAG,SAAA2D,KAAAG,YAAAyV,iBAEAkB,EAAA5a,UAAA4C,IAAAkB,KAAAG,YAAAyV,iBACA5V,KAAAmW,QAAAja,UAAAG,SAAA2D,KAAAG,YAAA0V,kBAEAiB,EAAA5a,UAAA4C,IAAAkB,KAAAG,YAAA0V,iBAEAiB,EAAAnY,iBAAA,QAAAqB,KAAAyW,qBAAAxV,KAAAjB,OACA8W,EAAAnY,iBAAA,UAAAqB,KAAAyW,qBAAAxV,KAAAjB,OAIAA,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAkV,YAGArV,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAyU,cACA5U,KAAA+V,QAAA9Q,aAAA6R,EAAA9W,KAAA+V,QAAA2B,YAEA1X,KAAA7C,SAAA8H,aAAA6R,EAAA9W,KAAAsT,UAEA,IAAAqE,EAAA1c,SAAA2D,cAAA,OACA+Y,EAAAzb,UAAA4C,IAAAkB,KAAAG,YAAA0U,YACA7U,KAAA7C,SAAA4D,YAAA4W,GACAA,EAAAhZ,iBAAA,QAAAqB,KAAAyW,qBAAAxV,KAAAjB,OACAA,KAAAwW,YAAAmB,EACA3X,KAAAmW,QAAAxX,iBAAA,UAAAqB,KAAAkW,sBAAAjV,KAAAjB,OACAA,KAAAmW,QAAA7Z,aAAA,cAAA,QAQA,GAJA0D,KAAAsW,sBAAAxb,OAAA8c,WAAA5X,KAAAE,UAAAuT,WACAzT,KAAAsW,sBAAAuB,YAAA7X,KAAAqW,mBAAApV,KAAAjB,OACAA,KAAAqW,qBAEArW,KAAA+V,SAAA/V,KAAAuT,QAAA,CACAvT,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAAmV,UACA,IAAAwC,EAAA7c,SAAA2D,cAAA,OACAkZ,EAAA5b,UAAA4C,IAAAkB,KAAAG,YAAA4U,eACA/U,KAAA+V,QAAA9Q,aAAA6S,EAAA9X,KAAAuT,SACAvT,KAAA+V,QAAA7Q,YAAAlF,KAAAuT,SACA,IAAAwE,EAAA9c,SAAA2D,cAAA,OACAmZ,EAAA7b,UAAA4C,IAAAkB,KAAAG,YAAA8U,gBACA8C,EAAA7b,UAAA4C,IAAAkB,KAAAG,YAAA+U,qBACA,IAAA8C,EAAA/c,SAAA2D,cAAA,KACAoZ,EAAA9b,UAAA4C,IAAAkB,KAAAG,YAAAqU,MACAwD,EAAAhL,YAAAhN,KAAAE,UAAA2T,aACAkE,EAAAhX,YAAAiX,GACAD,EAAApZ,iBAAA,QAAA,WACAqB,KAAAuT,QAAA0E,YAAAjY,KAAAE,UAAAwT,mBACAzS,KAAAjB,OACA,IAAAkY,EAAAjd,SAAA2D,cAAA,OACAsZ,EAAAhc,UAAA4C,IAAAkB,KAAAG,YAAA8U,gBACAiD,EAAAhc,UAAA4C,IAAAkB,KAAAG,YAAAgV,sBACA,IAAAgD,EAAAld,SAAA2D,cAAA,KACAuZ,EAAAjc,UAAA4C,IAAAkB,KAAAG,YAAAqU,MACA2D,EAAAnL,YAAAhN,KAAAE,UAAA4T,cACAoE,EAAAnX,YAAAoX,GACAD,EAAAvZ,iBAAA,QAAA,WACAqB,KAAAuT,QAAA0E,YAAAjY,KAAAE,UAAAwT,mBACAzS,KAAAjB,OACA8X,EAAA/W,YAAAgX,GACAD,EAAA/W,YAAAf,KAAAuT,SACAuE,EAAA/W,YAAAmX,GAGA,IAAAE,EAAA,WACA,EAAApY,KAAAuT,QAAA0E,WACAF,EAAA7b,UAAA4C,IAAAkB,KAAAG,YAAAgS,WAEA4F,EAAA7b,UAAAiG,OAAAnC,KAAAG,YAAAgS,WAEAnS,KAAAuT,QAAA0E,WAAAjY,KAAAuT,QAAA8E,YAAArY,KAAAuT,QAAAZ,YACAuF,EAAAhc,UAAA4C,IAAAkB,KAAAG,YAAAgS,WAEA+F,EAAAhc,UAAAiG,OAAAnC,KAAAG,YAAAgS,YAEAlR,KAAAjB,MACAA,KAAAuT,QAAA5U,iBAAA,SAAAyZ,GACAA,IAEA,IAAAE,EAAA,WAEAtY,KAAAuY,kBACAzY,aAAAE,KAAAuY,kBAEAvY,KAAAuY,iBAAA1Y,WAAA,WACAuY,IACApY,KAAAuY,iBAAA,MACAtX,KAAAjB,MAAAA,KAAAE,UAAAyT,iBACA1S,KAAAjB,MACAlF,OAAA6D,iBAAA,SAAA2Z,GACAtY,KAAAuT,QAAArX,UAAAG,SAAA2D,KAAAG,YAAAqD,mBACAxD,KAAAuT,QAAArX,UAAA4C,IAAAkB,KAAAG,YAAAsB,sBAMA,IAHA,IAAAyR,EAAAlT,KAAAuT,QAAAhY,iBAAA,IAAAyE,KAAAG,YAAA6U,KACA7B,EAAAnT,KAAAsT,SAAA/X,iBAAA,IAAAyE,KAAAG,YAAAiV,OAEAnb,EAAA,EAAAA,EAAAiZ,EAAAhZ,OAAAD,IACA,IAAAgZ,EAAAC,EAAAjZ,GAAAiZ,EAAAC,EAAAnT,MAGAA,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,eA2CAhH,OAAA,kBAAAmY,EAGAta,EAAAY,SAAA,CACAyE,YAAAgV,EACA3V,cAAA,iBACAhC,SAAA,kBA0BA,IAAAmd,EAAA,SAAAxf,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,kBAAA0d,GAOA/a,UAAAyC,UAAA,GASAsY,EAAA/a,UAAA0C,YAAA,CACAsY,WAAA,iBACAC,WAAA,6BACAC,eAAA,yBACAC,YAAA,cACA9W,YAAA,eAWA0W,EAAA/a,UAAAob,WAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAD,EACA,WACAD,EAAArW,QACAsW,EAAA7c,UAAA4C,IAAAkB,KAAAG,YAAAyY,aAEAG,EAAA7c,UAAAiG,OAAAnC,KAAAG,YAAAyY,cAEA3X,KAAAjB,MAEAgZ,EACA,WACA,IAAA/e,EAEA,GAAA6e,EAAArW,QACA,IAAAxI,EAAA,EAAAA,EAAA+e,EAAA9e,OAAAD,IACA+e,EAAA/e,GAAA2I,cAAA,MAAAA,cAAA,iBACA,iBAAAF,QACAsW,EAAA/e,GAAAiC,UAAA4C,IAAAkB,KAAAG,YAAAyY,kBAGA,IAAA3e,EAAA,EAAAA,EAAA+e,EAAA9e,OAAAD,IACA+e,EAAA/e,GAAA2I,cAAA,MAAAA,cAAA,iBACA,iBAAAD,UACAqW,EAAA/e,GAAAiC,UAAAiG,OAAAnC,KAAAG,YAAAyY,cAGA3X,KAAAjB,WAjBA,GA4BAwY,EAAA/a,UAAAwb,gBAAA,SAAAF,EAAAC,GACA,IAAAE,EAAAje,SAAA2D,cAAA,SACAua,EAAA,CACA,eACA,kBACA,uBACAnZ,KAAAG,YAAAwY,gBAEAO,EAAA/e,UAAAgf,EAAA5c,KAAA,KACA,IAAAuc,EAAA7d,SAAA2D,cAAA,SAWA,OAVAka,EAAApC,KAAA,WACAoC,EAAA5c,UAAA4C,IAAA,uBACAia,GACAD,EAAArW,QAAAsW,EAAA7c,UAAAG,SAAA2D,KAAAG,YAAAyY,aACAE,EAAAna,iBAAA,SAAAqB,KAAA6Y,WAAAC,EAAAC,KACAC,GACAF,EAAAna,iBAAA,SAAAqB,KAAA6Y,WAAAC,EAAA,KAAAE,IAEAE,EAAAnY,YAAA+X,GACAngB,EAAAI,eAAAmgB,EAAA,oBACAA,GAKAV,EAAA/a,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAAic,EAAApZ,KAAA7C,SAAAyF,cAAA,MACAyW,EAAA9b,MAAAE,UAAAC,MAAAC,KAAAqC,KAAA7C,SAAA5B,iBAAA,aACA+d,EAAA/b,MAAAE,UAAAC,MAAAC,KAAAqC,KAAA7C,SAAA5B,iBAAA,aACAge,EAAAF,EAAAG,OAAAF,GACA,GAAAtZ,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAuY,YAAA,CACA,IAAAe,EAAAxe,SAAA2D,cAAA,MACA8a,EAAA1Z,KAAAiZ,gBAAA,KAAAM,GACAE,EAAA1Y,YAAA2Y,GACAN,EAAApU,cAAAC,aAAAwU,EAAAL,GACA,IAAA,IAAAnf,EAAA,EAAAA,EAAAsf,EAAArf,OAAAD,IAAA,CACA,IAAA0f,EAAAJ,EAAAtf,GAAA2I,cAAA,MACA,GAAA+W,EAAA,CACA,IAAAC,EAAA3e,SAAA2D,cAAA,MACA,GAAA,UAAA2a,EAAAtf,GAAAoO,WAAAwR,SAAAC,cAAA,CACA,IAAAC,EAAA/Z,KAAAiZ,gBAAAM,EAAAtf,IACA2f,EAAA7Y,YAAAgZ,GAEAR,EAAAtf,GAAAgL,aAAA2U,EAAAD,IAGA3Z,KAAA7C,SAAAjB,UAAA4C,IAAAkB,KAAAG,YAAA2B,gBAMAnJ,EAAAY,SAAA,CACAyE,YAAAwa,EACAnb,cAAA,oBACAhC,SAAA,sBA0BA,IAAA2e,EAAA,SAAAhhB,GACAgH,KAAA7C,SAAAnE,EAEAgH,KAAAC,SAEAnF,OAAA,eAAAkf,GAOAvc,UAAAyC,UAAA,CACA+Z,cAAA,wBACAC,aAAA,MACAC,gBAAA,MACAC,cAAA,IACAC,YAAA,IAUAL,EAAAvc,UAAA0C,YAAA,CACAuB,cAAA,qBACA4Y,4BAAA,sCACAha,OAAA,aACAmE,aAAA,eACAD,WAAA,cAQAwV,EAAAvc,UAAA8c,aAAA,SAAA/Z,GACA,IAAAR,KAAAc,eAAAwF,MAAAuB,QAAA7H,KAAAc,eAAAwF,MAAAsB,OAAA,CACA,IAAAzB,EAAAnG,KAAA7C,SAAAiJ,wBACApG,KAAAwa,YAAArU,EAAAyB,OACA5H,KAAAya,WAAAtU,EAAA0B,MACA7H,KAAA0a,YAAA,EAAA/a,KAAAgb,KAAAxU,EAAA0B,MAAA1B,EAAA0B,MAAA1B,EAAAyB,OAAAzB,EAAAyB,QAAA,EACA5H,KAAAc,eAAAwF,MAAAuB,MAAA7H,KAAA0a,YAAA,KACA1a,KAAAc,eAAAwF,MAAAsB,OAAA5H,KAAA0a,YAAA,KAGA,GADA1a,KAAAc,eAAA5E,UAAA4C,IAAAkB,KAAAG,YAAAqE,YACA,cAAAhE,EAAAkW,MAAA1W,KAAA4a,mBACA5a,KAAA4a,oBAAA,MACA,CAKA,GAJA,eAAApa,EAAAkW,OACA1W,KAAA4a,oBAAA,GAGA,EADA5a,KAAA6a,gBAEA,OAEA7a,KAAA8a,cAAA,GACA,IACAC,EACA/P,EAFAgQ,EAAAxa,EAAAya,cAAA7U,wBAIA,GAAA,IAAA5F,EAAAsK,SAAA,IAAAtK,EAAAuK,QACAgQ,EAAApb,KAAAub,MAAAF,EAAAnT,MAAA,GACAmD,EAAArL,KAAAub,MAAAF,EAAApT,OAAA,OACA,CACA,IAAAkD,OAAAyB,IAAA/L,EAAAsK,QAAAtK,EAAAsK,QAAAtK,EAAA2a,QAAA,GAAArQ,QACAC,OAAAwB,IAAA/L,EAAAuK,QAAAvK,EAAAuK,QAAAvK,EAAA2a,QAAA,GAAApQ,QACAgQ,EAAApb,KAAAub,MAAApQ,EAAAkQ,EAAArU,MACAqE,EAAArL,KAAAub,MAAAnQ,EAAAiQ,EAAAxU,KAEAxG,KAAAob,YAAAL,EAAA/P,GACAhL,KAAAqb,iBAAA,GACAvgB,OAAAqE,sBAAAa,KAAAsb,iBAAAra,KAAAjB,SASAga,EAAAvc,UAAA8d,WAAA,SAAA/a,GAEAA,GAAA,IAAAA,EAAAgb,QAIA1gB,OAAA+E,WAAA,WACAG,KAAAc,eAAA5E,UAAAiG,OAAAnC,KAAAG,YAAAqE,aACAvD,KAAAjB,MAAA,IAMAga,EAAAvc,UAAAwC,KAAA,WACA,GAAAD,KAAA7C,SAAA,CACA,IAAAse,EAAAzb,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAuB,eACA1B,KAAA7C,SAAAjB,UAAAG,SAAA2D,KAAAG,YAAAma,+BACAta,KAAAc,eAAAd,KAAA7C,SAAAyF,cAAA,IAAA5C,KAAAG,YAAAG,QACAN,KAAA0b,YAAA,EACA1b,KAAA0a,YAAA,EACA1a,KAAA2b,GAAA,EACA3b,KAAA4b,GAAA,EAIA5b,KAAA4a,oBAAA,EACA5a,KAAA6b,iBAAA7b,KAAAua,aAAAtZ,KAAAjB,MACAA,KAAA7C,SAAAwB,iBAAA,YAAAqB,KAAA6b,kBACA7b,KAAA7C,SAAAwB,iBAAA,aAAAqB,KAAA6b,kBACA7b,KAAA8b,eAAA9b,KAAAub,WAAAta,KAAAjB,MACAA,KAAA7C,SAAAwB,iBAAA,UAAAqB,KAAA8b,gBACA9b,KAAA7C,SAAAwB,iBAAA,aAAAqB,KAAA8b,gBACA9b,KAAA7C,SAAAwB,iBAAA,WAAAqB,KAAA8b,gBACA9b,KAAA7C,SAAAwB,iBAAA,OAAAqB,KAAA8b,gBAKA9b,KAAA6a,cAAA,WACA,OAAA7a,KAAA0b,aAMA1b,KAAA8a,cAAA,SAAAiB,GACA/b,KAAA0b,YAAAK,GAMA/b,KAAAgc,iBAAA,WACA,OAAAhc,KAAAc,gBAOAd,KAAAob,YAAA,SAAAa,EAAAC,GACAlc,KAAA2b,GAAAM,EACAjc,KAAA4b,GAAAM,GAMAlc,KAAAqb,gBAAA,SAAA3M,GACA,GAAA,OAAA1O,KAAAc,eAAA,CACA,IAAAqb,EACAC,EAEAC,EAAA,aAAArc,KAAA2b,GAAA,OAAA3b,KAAA4b,GAAA,MACAlN,GACA0N,EAAApc,KAAAE,UAAA+Z,cACAja,KAAAE,UAAAga,eAEAkC,EAAApc,KAAAE,UAAAma,YACAra,KAAA0a,YAAA,KACAe,IACAY,EAAA,aAAArc,KAAAya,WAAA,EAAA,OAAAza,KAAAwa,YAAA,EAAA,QAGA2B,EAAA,yBAAAE,EAAAD,EACApc,KAAAc,eAAAwF,MAAAgW,gBAAAH,EACAnc,KAAAc,eAAAwF,MAAAiW,YAAAJ,EACAnc,KAAAc,eAAAwF,MAAAkW,UAAAL,EACAzN,EACA1O,KAAAc,eAAA5E,UAAAiG,OAAAnC,KAAAG,YAAAsE,cAEAzE,KAAAc,eAAA5E,UAAA4C,IAAAkB,KAAAG,YAAAsE,gBAOAzE,KAAAsb,iBAAA,WACA,EAAAtb,KAAA0b,cACA5gB,OAAAqE,sBAAAa,KAAAsb,iBAAAra,KAAAjB,OAEAA,KAAAqb,iBAAA,OAQA1iB,EAAAY,SAAA,CACAyE,YAAAgc,EACA3c,cAAA,iBACAhC,SAAA,uBACAwB,QAAA,IAz5HA,GCQAmD,KAAA/E","file":"../main.min.js","sourcesContent":[";(function() {\n\"use strict\";\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n     * Date.now polyfill.\n     * @return {number} the current Date\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n     * requestAnimationFrame polyfill.\n     * @param  {!Function} callback the callback function.\n     */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                radios[i]['MaterialRadio'].updateClasses_();\n            }\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                var href = tab.href.split('#')[1];\n                var panel = ctx.element_.querySelector('#' + href);\n                ctx.resetTabState_();\n                ctx.resetPanelState_();\n                tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            }\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    if (!layout.tabBar_.classList.contains(layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                selectTab();\n            }\n        });\n    }\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n}());\n","/**\n * @file\n * Sitewide javascript behaviors.\n */\n(function (window, document) {\n    'use strict';\n\n\n})(this, this.document);\n"]}